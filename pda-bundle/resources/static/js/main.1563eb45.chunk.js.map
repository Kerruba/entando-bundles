{"version":3,"sources":["components/App/Menu.js","api/constants.js","utils.js","api/config.js","components/common/Table/utils.js","mocks/taskList/api.mock.js","api/taskList.js","components/common/IconMenuButton.js","components/common/Table/custom/ActionCell.js","components/TaskList/normalizeData.js","components/common/ErrorNotification.js","components/common/ErrorComponent.js","types/columnType.js","types/rowType.js","components/common/SearchInput.js","components/common/Table/TablePagination.js","components/common/Table/EmptyRow.js","components/common/Table/InternalTableCell.js","components/common/Table/InternalTableBody.js","components/common/Table/TableSortLabel.js","components/common/Table/InternalTableHeader.js","components/common/Table/InternalTableHead.js","components/common/Table/InternalTablePaginationActions.js","components/TaskList/TaskListSkeleton.js","components/common/Table/Table.js","theme.js","components/TaskList/TaskListContainer.js","components/TaskList/TaskListConfig.js","components/App/App.js","i18n/locales.js","i18n/i18nextOptions.js","i18n/index.js","custom-elements/TaskListElement.js"],"names":["Menu","open","setOpen","classes","Drawer","onClose","className","List","ListItem","button","component","Link","to","onClick","ListItemIcon","ListItemText","primary","Typography","variant","Divider","item","IconButton","iconButton","size","Settings","fontSize","defaultProps","withStyles","position","right","top","WIDGET_CODES","process","REACT_APP_JWT_TOKEN","taskList","SERVICE","timeout","ms","a","timer","Promise","resolve","ref","setTimeout","get","utils","config","compareDates","accessor","sortOrder","rowA","rowB","dateA","dateB","moment","isBefore","compareStrings","stringA","toUpperCase","stringB","compareNumbers","numberA","numberB","page","rowsPerPage","sortedColumn","filter","displayRows","tasks","payload","length","forEach","row","keys","Object","i","undefined","toString","includes","push","sortFunction","Date","sort","firstRow","lastRow","Number","isNaN","slice","metadata","connection","pageSize","getTasks","url","URL","token","localStorage","getItem","fetch","method","headers","Headers","Authorization","response","json","IconMenuButton","state","anchorEl","handleClick","e","setState","currentTarget","handleClose","this","props","menuItems","id","minMenuWidth","aria-owns","aria-haspopup","PaperProps","style","maxHeight","ITEM_HEIGHT","minWidth","map","text","icon","MenuItem","key","dense","React","Component","ActionCell","getType","column","normalizeColumns","columns","normalized","visible","header","b","unshift","customCell","styles","left","background","width","zIndex","borderRight","paddingRight","textAlign","normalizeRows","rows","normalizedRow","String","ErrorNotification","message","messageTemplate","clsx","iconVariant","Snackbar","SnackbarContent","error","action","aria-label","color","theme","display","alignItems","opacity","marginRight","spacing","backgroundColor","palette","dark","withTheme","ErrorComponent","root","transform","paddingBottom","shape","string","align","object","func","inlimit","application","incdownpayment","number","name","subject","desc","status","priority","skipable","owner","created","activated","processinstanceid","processdefinitionid","containerid","parentid","SearchInput","onChange","value","InputBase","input","placeholder","padding","borderBottom","flex","spacer","selectIcon","TablePagination","EmptyRow","colspan","height","colSpan","InternalTableCell","CustomCell","TableCell","whiteSpace","InternalTableBody","emptyRows","rowHeight","TableBody","TableRow","JSON","stringify","cursor","hover","TableSortLabel","direction","active","children","classNames","ascActive","descActive","notActive","InternalTableHeader","createSortHandler","label","InternalTableHead","TableHead","InternalTablePaginationActions","setPageNumber","pageNumber","handlePageNumberInputChange","event","target","onChangePage","numberOfPages","handleFirstPageButtonClick","handlePrevButtonClick","handleNextButtonClick","handleLastPageButtonClick","count","Math","max","ceil","numberOfDigits","disabled","previousIcon","TextField","pageNumberInput","i18next","t","lastPage","floor","marginLeft","getKey","qty","TaskListSkeleton","Skeleton","search","Array","tableRows","justifyContent","marginTop","margin","labelDisplayedRows","from","replace","swapOrder","order","Table","property","lazyLoadingProps","newSortOder","find","handleChangeRowsPerPage","handleChangePage","handleChangeFilter","rowsPerPageOptions","initialSortedColumn","initialSortOrder","title","subtitle","hidePagination","loading","isLazy","hasHeader","rowsSize","Toolbar","toolbar","noSubtitleToolbar","tableWrapper","hideShadows","TableFooter","currentPage","onChangeRowsPerPage","ActionsComponent","labelRowsPerPage","minHeight","boxShadow","overflow","createMuiTheme","overrides","MuiTableCell","head","TaskList","errorAlert","componentDidMount","lazyLoading","configApi","taskListApi","handleError","componentDidUpdate","prevProps","updateRows","sortedOrder","callback","withDelay","clearTimeout","res","closeNotification","err","onError","ThemeProvider","Paper","paper","TaskListConfig","knowledgeSource","Widgets","FormGroup","FormControl","formControl","fullWidth","InputLabel","htmlFor","Select","inputProps","FormControlLabel","control","Checkbox","makeStyles","appBar","flexGrow","menuButton","App","en","it","interpolation","escapeValue","ns","use","initReactI18next","init","i18nextOptions","locales","locale","addResourceBundle","TaskListElement","mountPoint","document","createElement","appendChild","getAttribute","changeLanguage","reactRoot","customEvent","CustomEvent","detail","dispatchEvent","ReactDOM","render","HTMLElement","customElements","define"],"mappings":"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","file":"static/js/main.1563eb45.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport {\n  Typography,\n  List,\n  ListItem,\n  ListItemText,\n  ListItemIcon,\n  Drawer,\n  Divider,\n  IconButton,\n} from '@material-ui/core';\nimport { Home as HomeIcon, List as ListIcon, Settings as SettingsIcon } from '@material-ui/icons';\nimport { withStyles } from '@material-ui/styles';\n\nimport 'components/App/App.css';\n\nconst styles = {\n  item: {\n    position: 'relative',\n  },\n  iconButton: {\n    position: 'absolute',\n    right: 5,\n    top: 11,\n  },\n};\n\nconst Menu = ({ open, setOpen, classes }) => (\n  <Drawer open={open} onClose={() => setOpen(false)}>\n    <div className=\"app-list\">\n      <List>\n        <ListItem button component={Link} to=\"/\" onClick={() => setOpen(false)}>\n          <ListItemIcon>\n            <HomeIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Home\" />\n        </ListItem>\n\n        <Typography variant=\"overline\">Widgets</Typography>\n        <Divider />\n        <div className={classes.item}>\n          <ListItem button component={Link} to=\"/TaskList\" onClick={() => setOpen(false)}>\n            <ListIcon />\n            <ListItemText primary=\"TaskList\" />\n          </ListItem>\n          <IconButton\n            className={classes.iconButton}\n            size=\"small\"\n            component={Link}\n            to=\"/TaskListConfig\"\n            onClick={() => setOpen(false)}\n          >\n            <SettingsIcon fontSize=\"small\" />\n          </IconButton>\n        </div>\n      </List>\n    </div>\n  </Drawer>\n);\n\nMenu.propTypes = {\n  classes: PropTypes.shape({\n    item: PropTypes.string,\n    iconButton: PropTypes.string,\n  }),\n  open: PropTypes.bool.isRequired,\n  setOpen: PropTypes.func.isRequired,\n};\n\nMenu.defaultProps = {\n  classes: {},\n};\n\nexport default withStyles(styles)(Menu);\n","export const DOMAIN = process.env.REACT_APP_DOMAIN || 'http://localhost:8082';\n\nexport const JWT_TOKEN = process.env.REACT_APP_JWT_TOKEN;\n\nexport const IS_MOCKED_API = false;\n\nexport const MOCK_API_DELAY = 800;\n\nexport const WIDGET_CODES = {\n  taskList: 'taskListWidget',\n};\n\nexport const SERVICE = {};\n","const timeout = async (ms, timer = {}) =>\n  new Promise(resolve => {\n    timer.ref = setTimeout(resolve, ms);\n  });\n\nexport default {\n  timeout,\n};\n","import { MOCK_API_DELAY } from 'api/constants';\nimport utils from 'utils';\nimport config from 'mocks/config';\n\nconst get = async () => {\n  await utils.timeout(MOCK_API_DELAY);\n  return config;\n};\n\nexport default {\n  get,\n};\n","/* eslint-disable react/display-name */\nimport moment from 'moment';\n\nexport function compareDates(accessor, sortOrder) {\n  return (rowA, rowB) => {\n    const dateA = rowA[accessor];\n    const dateB = rowB[accessor];\n    if (sortOrder === 'asc') {\n      if (moment(dateA).isBefore(dateB)) {\n        return -1;\n      }\n      if (moment(dateB).isBefore(dateA)) {\n        return 1;\n      }\n      return 0;\n    }\n    if (moment(dateA).isBefore(dateB)) {\n      return 1;\n    }\n    if (moment(dateB).isBefore(dateA)) {\n      return -1;\n    }\n    return 0;\n  };\n}\n\nexport function compareStrings(accessor, sortOrder) {\n  return (rowA, rowB) => {\n    const stringA = rowA[accessor] ? rowA[accessor].toUpperCase() : '';\n    const stringB = rowB[accessor] ? rowB[accessor].toUpperCase() : '';\n    if (sortOrder === 'asc') {\n      if (stringA < stringB) {\n        return -1;\n      }\n      if (stringA > stringB) {\n        return 1;\n      }\n      return 0;\n    }\n    if (stringA < stringB) {\n      return 1;\n    }\n    if (stringA > stringB) {\n      return -1;\n    }\n    return 0;\n  };\n}\n\nexport function compareNumbers(accessor, sortOrder) {\n  return (rowA, rowB) => {\n    const numberA = rowA[accessor];\n    const numberB = rowB[accessor];\n    if (sortOrder === 'asc') {\n      return numberA - numberB;\n    }\n    return numberB - numberA;\n  };\n}\n","import { compareDates, compareNumbers, compareStrings } from 'components/common/Table/utils';\nimport tasks from './tasks.json';\n\nexport default function(page, rowsPerPage, sortedColumn, sortOrder = 'asc', filter) {\n  let displayRows = tasks.payload;\n  let size = displayRows.length;\n  // apply filter\n  if (filter) {\n    displayRows = [];\n    tasks.payload.forEach(row => {\n      const keys = Object.keys(row);\n      for (let i = 0; i < keys.length; i += 1) {\n        if (\n          row[keys[i]] !== undefined &&\n          row[keys[i]] !== null &&\n          row[keys[i]]\n            .toString()\n            .toUpperCase()\n            .includes(filter.toUpperCase())\n        ) {\n          displayRows.push(row);\n          break;\n        }\n      }\n    });\n    size = displayRows.length;\n  }\n\n  // apply sorting\n  let sortFunction = compareStrings;\n  if (tasks.payload[0][sortedColumn] instanceof Date) {\n    sortFunction = compareDates;\n  } else if (typeof tasks.payload[0][sortedColumn] === 'number') {\n    sortFunction = compareNumbers;\n  }\n\n  displayRows = sortedColumn\n    ? displayRows.sort(sortFunction(sortedColumn, sortOrder))\n    : displayRows;\n\n  // get the desired page\n  const firstRow = page * rowsPerPage;\n  const lastRow = firstRow + rowsPerPage;\n  displayRows = Number.isNaN(firstRow) ? displayRows : displayRows.slice(firstRow, lastRow);\n\n  return {\n    payload: displayRows,\n    metadata: {\n      size,\n    },\n  };\n}\n","import { IS_MOCKED_API, MOCK_API_DELAY, SERVICE } from 'api/constants';\nimport getTasks from 'mocks/taskList/api.mock';\nimport utils from 'utils';\n\nconst get = async (connection, page, pageSize, sortedColumn, sortOrder, filter) => {\n  if (IS_MOCKED_API) {\n    await utils.timeout(MOCK_API_DELAY);\n    return getTasks(page, pageSize, sortedColumn, sortOrder, filter);\n  }\n\n  const url = `${SERVICE.URL}/connections/${connection}/tasks`;\n  const token = localStorage.getItem('token');\n  const response = await fetch(url, {\n    method: 'get',\n    headers: new Headers({\n      Authorization: `Bearer ${token}`,\n      'Content-Type': 'application/json',\n    }),\n  });\n\n  return response.json();\n};\n\nexport default {\n  get,\n};\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MoreVert from '@material-ui/icons/MoreVert';\nimport IconButton from '@material-ui/core/IconButton';\n\nconst ITEM_HEIGHT = 40;\nconst MAX_ITEMS = 5;\nconst MAX_HEIGHT = ITEM_HEIGHT * MAX_ITEMS;\n\nclass IconMenuButton extends React.Component {\n  state = {\n    anchorEl: null,\n    open: false,\n  };\n\n  handleClick = e => {\n    this.setState({ open: true, anchorEl: e.currentTarget });\n  };\n\n  handleClose = () => {\n    this.setState({ open: false });\n  };\n\n  render() {\n    const { menuItems, id, minMenuWidth } = this.props;\n    const { open, anchorEl } = this.state;\n\n    return (\n      <>\n        <IconButton\n          onClick={this.handleClick}\n          aria-owns={open ? id : null}\n          aria-haspopup=\"true\"\n          open={open}\n          size=\"small\"\n        >\n          <MoreVert fontSize=\"small\" />\n        </IconButton>\n        <Menu\n          id={id}\n          anchorEl={anchorEl}\n          open={open}\n          onClose={this.handleClose}\n          PaperProps={{\n            style: {\n              maxHeight: MAX_HEIGHT,\n              minWidth: minMenuWidth,\n            },\n          }}\n        >\n          {menuItems.map(({ onClick, text, icon }) => (\n            <MenuItem\n              onClick={() => {\n                if (onClick) onClick();\n                this.handleClose();\n              }}\n              key={text}\n              dense\n            >\n              {icon} {`\\u00a0${text}`}\n            </MenuItem>\n          ))}\n        </Menu>\n      </>\n    );\n  }\n}\n\nIconMenuButton.propTypes = {\n  id: PropTypes.string,\n  menuItems: PropTypes.arrayOf(\n    PropTypes.shape({\n      onClick: PropTypes.func,\n      text: PropTypes.string,\n    })\n  ),\n  minMenuWidth: PropTypes.number,\n};\n\nIconMenuButton.defaultProps = {\n  id: '',\n  menuItems: [],\n  minMenuWidth: 0,\n};\n\nexport default IconMenuButton;\n","import React from 'react';\nimport DoneIcon from '@material-ui/icons/Done';\nimport HowToRegIcon from '@material-ui/icons/HowToReg';\nimport AssessmentIcon from '@material-ui/icons/Assessment';\n\nimport IconMenuButton from 'components/common/IconMenuButton';\n\nconst ActionCell = () => {\n  const menuItems = [\n    {\n      text: 'Claim',\n      icon: <HowToRegIcon fontSize=\"small\" />,\n    },\n    {\n      text: 'Complete',\n      icon: <DoneIcon fontSize=\"small\" />,\n    },\n    {\n      text: 'Diagram',\n      icon: <AssessmentIcon fontSize=\"small\" />,\n    },\n  ];\n\n  return <IconMenuButton menuItems={menuItems} />;\n};\n\nexport default ActionCell;\n","import ActionCell from 'components/common/Table/custom/ActionCell';\nimport { compareDates, compareNumbers, compareStrings } from 'components/common/Table/utils';\n\nexport const getType = (column, firstRow) => {\n  let sortFunction = compareStrings;\n  if (firstRow[column] instanceof Date) {\n    sortFunction = compareDates;\n  } else if (typeof firstRow[column] === 'number') {\n    sortFunction = compareNumbers;\n  }\n\n  return sortFunction;\n};\n\nexport const normalizeColumns = (columns, firstRow) => {\n  const normalized = columns\n    .filter(column => column.visible)\n    .map(column => ({\n      header: column.header,\n      accessor: column.key,\n      position: column.position,\n      sortFunction: getType(column, firstRow),\n    }));\n  // order columns\n  normalized.sort((a, b) => (a.position > b.position ? 1 : a.position < b.position ? -1 : 0));\n\n  // add action field\n  normalized.unshift({\n    header: 'Action',\n    accessor: 'action',\n    customCell: ActionCell,\n    styles: {\n      position: 'sticky',\n      left: 0,\n      background: 'white',\n      width: 20,\n      zIndex: 100,\n      borderRight: '1px solid #eee',\n      paddingRight: 16,\n      textAlign: 'center',\n    },\n  });\n\n  return normalized;\n};\n\nexport const normalizeRows = rows =>\n  rows.map(row => {\n    const normalizedRow = {};\n    Object.keys(row).forEach(key => {\n      if (row[key] instanceof Object) {\n        normalizedRow[key] = '';\n      } else {\n        normalizedRow[key] = String(row[key]);\n      }\n    });\n    return normalizedRow;\n  });\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { Snackbar, SnackbarContent } from '@material-ui/core';\nimport { withStyles } from '@material-ui/styles';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\n\nconst styles = theme => ({\n  message: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  icon: {\n    fontSize: 20,\n  },\n  iconVariant: {\n    opacity: 0.9,\n    marginRight: theme.spacing(1),\n  },\n  error: {\n    backgroundColor: theme.palette.error.dark,\n  },\n});\n\nconst ErrorNotification = ({ classes, message, onClose }) => {\n  const messageTemplate = (\n    <span className={classes.message}>\n      <ErrorIcon className={clsx(classes.icon, classes.iconVariant)} />\n      {message}\n    </span>\n  );\n\n  return message ? (\n    <Snackbar open onClose={onClose}>\n      <SnackbarContent\n        className={classes.error}\n        message={messageTemplate}\n        action={[\n          <IconButton key=\"close\" aria-label=\"close\" color=\"inherit\" onClick={onClose}>\n            <CloseIcon className={classes.icon} />\n          </IconButton>,\n        ]}\n      />\n    </Snackbar>\n  ) : (\n    ''\n  );\n};\n\nErrorNotification.propTypes = {\n  classes: PropTypes.shape({\n    message: PropTypes.string.isRequired,\n    icon: PropTypes.string.isRequired,\n    iconVariant: PropTypes.string.isRequired,\n    error: PropTypes.string.isRequired,\n  }).isRequired,\n  message: PropTypes.string,\n  onClose: PropTypes.func,\n};\n\nErrorNotification.defaultProps = {\n  message: null,\n  onClose: () => {},\n};\n\nexport default withStyles(styles, { withTheme: true })(ErrorNotification);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport CloudOff from '@material-ui/icons/CloudOff';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/styles';\n\nconst styles = {\n  root: {\n    position: 'absolute',\n    textAlign: 'center',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n  },\n  icon: {\n    fontSize: 72,\n    paddingBottom: 10,\n  },\n};\n\nconst ErrorComponent = ({ classes, message }) => (\n  <div className={classes.root}>\n    <CloudOff className={classes.icon} />\n    <Typography>{message}</Typography>\n  </div>\n);\n\nErrorComponent.propTypes = {\n  classes: PropTypes.shape({\n    root: PropTypes.string,\n    icon: PropTypes.string,\n  }),\n  message: PropTypes.string,\n};\n\nErrorComponent.defaultProps = {\n  classes: {},\n  message: '',\n};\n\nexport default withStyles(styles)(ErrorComponent);\n","import { shape, string, object, func } from 'prop-types';\n\nexport default shape({\n  header: string,\n  accessor: string,\n  align: string,\n  styles: object,\n  sortFunction: func,\n});\n","import { shape, string, number, object } from 'prop-types';\n\nexport default shape({\n  inlimit: string,\n  application: string,\n  incdownpayment: string,\n  id: number,\n  name: string,\n  subject: string,\n  desc: string,\n  status: string,\n  priority: number,\n  skipable: string,\n  owner: string,\n  created: object,\n  activated: object,\n  processinstanceid: number,\n  processdefinitionid: string,\n  containerid: string,\n  parentid: number,\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport InputBase from '@material-ui/core/InputBase';\nimport SearchIcon from '@material-ui/icons/Search';\nimport withStyles from '@material-ui/styles/withStyles';\n\nconst styles = {\n  root: {\n    padding: '2px 4px',\n    display: 'flex',\n    alignItems: 'center',\n    width: 200,\n    borderBottom: 'solid 1px #ccc',\n  },\n  input: {\n    flex: 1,\n  },\n};\n\nconst SearchInput = ({ classes, onChange, value }) => (\n  <div className={classes.root}>\n    <InputBase\n      className={classes.input}\n      placeholder=\"Search...\"\n      value={value}\n      onChange={onChange}\n    />\n    <SearchIcon />\n  </div>\n);\n\nSearchInput.propTypes = {\n  classes: PropTypes.shape({\n    root: PropTypes.string,\n    input: PropTypes.string,\n    iconButton: PropTypes.string,\n  }),\n  onChange: PropTypes.func.isRequired,\n  value: PropTypes.string,\n};\n\nSearchInput.defaultProps = {\n  classes: {},\n  value: '',\n};\n\nexport default withStyles(styles)(SearchInput);\n","import TablePagination from '@material-ui/core/TablePagination';\nimport withStyles from '@material-ui/styles/withStyles';\n\nconst styles = {\n  spacer: {\n    flex: 'unset',\n  },\n  selectIcon: {\n    top: 'calc(50% - 12px)',\n    color: 'inherit',\n  },\n};\n\nexport default withStyles(styles)(TablePagination);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/styles/withStyles';\nimport Typography from '@material-ui/core/Typography';\n\nconst styles = {\n  root: {\n    background: 'transparent !important',\n    '& td': {\n      textAlign: 'center',\n      padding: 0,\n    },\n  },\n  text: {\n    color: '#ccc',\n  },\n};\n\nconst EmptyRow = ({ classes, colspan, text, height }) => (\n  <tbody>\n    <tr className={classes.root}>\n      <td colSpan={colspan} style={{ height }}>\n        <Typography variant=\"body1\" className={classes.text}>\n          {text}\n        </Typography>\n      </td>\n    </tr>\n  </tbody>\n);\n\nEmptyRow.propTypes = {\n  classes: PropTypes.shape({\n    root: PropTypes.string,\n    text: PropTypes.string,\n  }),\n  colspan: PropTypes.number,\n  text: PropTypes.string,\n  height: PropTypes.number,\n};\n\nEmptyRow.defaultProps = {\n  classes: {},\n  colspan: 1,\n  text: 'No data to display',\n  height: 250,\n};\n\nexport default withStyles(styles)(EmptyRow);\n","import React from 'react';\nimport TableCell from '@material-ui/core/TableCell';\n\nimport columnType from 'types/columnType';\nimport rowType from 'types/rowType';\n\nexport default function InternalTableCell({ column, row }) {\n  const CustomCell = column.customCell;\n  return (\n    <TableCell\n      size=\"small\"\n      key={column.accessor}\n      align={column.align}\n      style={{ ...column.styles, whiteSpace: 'nowrap' }}\n    >\n      {CustomCell ? <CustomCell row={row} /> : row[column.accessor]}\n    </TableCell>\n  );\n}\n\nInternalTableCell.propTypes = {\n  column: columnType.isRequired,\n  row: rowType.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\n\nimport columnType from 'types/columnType';\nimport rowType from 'types/rowType';\nimport InternalTableCell from './InternalTableCell';\n\nconst InternalTableBody = ({ columns, rows, emptyRows, rowHeight }) => {\n  return (\n    <TableBody>\n      {rows.map(row => (\n        <TableRow\n          key={JSON.stringify(row)}\n          style={{ height: rowHeight, cursor: row.onClick ? 'pointer' : 'initial' }}\n          hover\n        >\n          {columns.map(column => (\n            <InternalTableCell key={JSON.stringify(column)} column={column} row={row} />\n          ))}\n        </TableRow>\n      ))}\n      {emptyRows > 0 && (\n        <TableRow style={{ height: rowHeight * emptyRows }}>\n          <TableCell />\n        </TableRow>\n      )}\n    </TableBody>\n  );\n};\n\nInternalTableBody.propTypes = {\n  columns: PropTypes.arrayOf(columnType),\n  rows: PropTypes.arrayOf(rowType),\n  emptyRows: PropTypes.number,\n  rowHeight: PropTypes.number,\n};\n\nInternalTableBody.defaultProps = {\n  columns: [],\n  rows: [],\n  emptyRows: 0,\n  rowHeight: 55,\n};\n\nexport default InternalTableBody;\n","import React from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport MuiTableSortLabel from '@material-ui/core/TableSortLabel';\nimport withStyles from '@material-ui/styles/withStyles';\n\nconst styles = {\n  ascActive: {\n    '&:hover': {\n      '@global svg': {\n        transform: 'rotate(180deg)',\n      },\n    },\n  },\n  descActive: {\n    '&:hover': {\n      '@global svg': {\n        transform: 'rotate(0deg)',\n      },\n    },\n  },\n  notActive: {\n    '@global svg': {\n      transform: 'rotate(0deg)',\n    },\n  },\n};\n\nconst TableSortLabel = ({ direction, classes, active, className, children, onClick }) => {\n  return (\n    <MuiTableSortLabel\n      className={classNames(classes[active ? `${direction}Active` : 'notActive'], className)}\n      active={active}\n      direction={direction}\n      onClick={onClick}\n    >\n      {children}\n    </MuiTableSortLabel>\n  );\n};\n\nTableSortLabel.propTypes = {\n  classes: PropTypes.shape({\n    ascActive: PropTypes.string,\n    descActive: PropTypes.string,\n    notActive: PropTypes.string,\n  }),\n  direction: PropTypes.oneOf(['asc', 'desc']),\n  active: PropTypes.bool.isRequired,\n  className: PropTypes.string,\n  children: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n\nTableSortLabel.defaultProps = {\n  classes: {},\n  direction: 'asc',\n  className: '',\n};\n\nexport default withStyles(styles)(TableSortLabel);\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport TableCell from '@material-ui/core/TableCell';\n\nimport columnType from 'types/columnType';\nimport TableSortLabel from 'components/common/Table/TableSortLabel';\n\nfunction InternalTableHeader({ column, createSortHandler, sortedColumn, sortOrder }) {\n  const label = column.header || column.accessor;\n  const header = column.sortFunction ? (\n    <TableSortLabel\n      key={column.accessor}\n      active={column.accessor === sortedColumn}\n      onClick={createSortHandler(column.accessor)}\n      direction={sortOrder}\n    >\n      {label}\n    </TableSortLabel>\n  ) : (\n    label\n  );\n\n  return (\n    <TableCell\n      variant=\"head\"\n      key={column.accessor}\n      align={column.align}\n      style={{ whiteSpace: 'nowrap', ...column.styles }}\n    >\n      {header}\n    </TableCell>\n  );\n}\n\nInternalTableHeader.propTypes = {\n  column: columnType.isRequired,\n  sortOrder: PropTypes.string.isRequired,\n  createSortHandler: PropTypes.func,\n  sortedColumn: PropTypes.string,\n};\n\nInternalTableHeader.defaultProps = {\n  createSortHandler: () => () => {},\n  sortedColumn: '',\n};\n\nexport default InternalTableHeader;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n\nimport columnType from 'types/columnType';\nimport InternalTableHeader from 'components/common/Table/InternalTableHeader';\n\nexport default function InternalTableHead({ columns, createSortHandler, sortedColumn, sortOrder }) {\n  return (\n    <TableHead>\n      <TableRow>\n        {columns.map(column => (\n          <InternalTableHeader\n            key={JSON.stringify(column)}\n            column={column}\n            createSortHandler={createSortHandler}\n            sortedColumn={sortedColumn}\n            sortOrder={sortOrder}\n          />\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nInternalTableHead.propTypes = {\n  columns: PropTypes.arrayOf(columnType).isRequired,\n  createSortHandler: PropTypes.func,\n  sortedColumn: PropTypes.string,\n  sortOrder: PropTypes.string,\n};\n\nInternalTableHead.defaultProps = {\n  createSortHandler: () => () => {},\n  sortedColumn: '',\n  sortOrder: 'asc',\n};\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport SkipNextIcon from '@material-ui/icons/SkipNext';\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\nimport withStyles from '@material-ui/styles/withStyles';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport i18next from 'i18next';\n\nconst styles = {\n  root: {\n    marginLeft: 'auto',\n    marginRight: 20,\n    display: 'flex',\n    alignItems: 'center',\n  },\n  previousIcon: {\n    transform: 'rotate(180deg)',\n  },\n  pageNumberInput: {\n    marginRight: 10,\n  },\n};\n\nclass InternalTablePaginationActions extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      pageNumber: props && props.page + 1,\n    };\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    const lastPage = Math.floor(props.count / props.rowsPerPage);\n    if (props.page === lastPage || props.page !== +state.pageNumber + 1) {\n      return { pageNumber: props.page + 1 };\n    }\n    return state;\n  }\n\n  componentDidMount() {\n    const { page } = this.props;\n    this.setPageNumber(page + 1);\n  }\n\n  get numberOfPages() {\n    const { count, rowsPerPage } = this.props;\n    return Math.ceil(count / rowsPerPage);\n  }\n\n  setPageNumber = pageNumber => {\n    this.setState({ pageNumber });\n  };\n\n  handlePageNumberInputChange = event => {\n    const { value } = event.target;\n    const { onChangePage } = this.props;\n    // sync state and entered value\n    this.setPageNumber(value);\n    // navigate to entered page number if valid\n    const pageNumber = +value;\n    if (pageNumber && pageNumber <= this.numberOfPages) {\n      onChangePage(pageNumber - 1);\n    }\n  };\n\n  handleFirstPageButtonClick = () => {\n    const { onChangePage } = this.props;\n    onChangePage(0);\n  };\n\n  handlePrevButtonClick = () => {\n    const { onChangePage, page } = this.props;\n    onChangePage(page - 1);\n  };\n\n  handleNextButtonClick = () => {\n    const { onChangePage, page } = this.props;\n    onChangePage(page + 1);\n  };\n\n  handleLastPageButtonClick = () => {\n    const { onChangePage, count, rowsPerPage } = this.props;\n    onChangePage(Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  };\n\n  render() {\n    const { page, count, rowsPerPage, classes } = this.props;\n    const { pageNumber } = this.state;\n    const numberOfDigits = `${this.numberOfPages}`.length;\n\n    return (\n      <div className={classes.root}>\n        <IconButton size=\"small\" onClick={this.handleFirstPageButtonClick} disabled={page === 0}>\n          <SkipPreviousIcon />\n        </IconButton>\n\n        <IconButton size=\"small\" onClick={this.handlePrevButtonClick} disabled={page === 0}>\n          <PlayArrowIcon className={classes.previousIcon} />\n        </IconButton>\n\n        <TextField\n          className={classes.pageNumberInput}\n          style={{ width: 25 + 10 * numberOfDigits }}\n          value={pageNumber}\n          onChange={event => this.handlePageNumberInputChange(event)}\n        />\n\n        <Typography>{`${i18next.t('common.of')} ${this.numberOfPages}`}</Typography>\n\n        <IconButton\n          size=\"small\"\n          onClick={this.handleNextButtonClick}\n          disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        >\n          <PlayArrowIcon />\n        </IconButton>\n\n        <IconButton\n          size=\"small\"\n          onClick={this.handleLastPageButtonClick}\n          disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        >\n          <SkipNextIcon />\n        </IconButton>\n      </div>\n    );\n  }\n}\n\nInternalTablePaginationActions.propTypes = {\n  classes: PropTypes.shape({\n    root: PropTypes.string,\n    previousIcon: PropTypes.string,\n    pageNumberInput: PropTypes.string,\n  }),\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nInternalTablePaginationActions.defaultProps = {\n  classes: {},\n};\n\nexport default withStyles(styles)(InternalTablePaginationActions);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport withStyles from '@material-ui/styles/withStyles';\n\nconst styles = {\n  header: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    padding: '10px 20px',\n    '&>div': {\n      width: '50%',\n    },\n  },\n  search: {\n    width: '20% !important',\n    marginTop: 20,\n  },\n  tableRows: {\n    margin: '40px auto 40px auto',\n  },\n};\n\nconst getKey = (qty, i) => qty - i;\n\nconst TaskListSkeleton = ({ classes, rows }) => (\n  <>\n    <div className={classes.header}>\n      <div>\n        <Skeleton width=\"40%\" />\n        <Skeleton width=\"20%\" />\n      </div>\n      <div className={classes.search}>\n        <Skeleton width=\"100%\" height={40} variant=\"rect\" />\n      </div>\n    </div>\n    <div>\n      <Skeleton width=\"100%\" height={40} variant=\"rect\" />\n      {[...Array(rows)].map((row, i) => (\n        <Skeleton key={getKey(rows, i)} className={classes.tableRows} width=\"98%\" height={10} />\n      ))}\n    </div>\n    <div>\n      <Skeleton width=\"100%\" height={50} variant=\"rect\" />\n    </div>\n  </>\n);\n\nTaskListSkeleton.propTypes = {\n  classes: PropTypes.shape({\n    header: PropTypes.string,\n    search: PropTypes.string,\n    tableRows: PropTypes.string,\n  }),\n  rows: PropTypes.number,\n};\n\nTaskListSkeleton.defaultProps = {\n  classes: {},\n  rows: 10,\n};\n\nexport default withStyles(styles)(TaskListSkeleton);\n","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport withStyles from '@material-ui/styles/withStyles';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TableRow from '@material-ui/core/TableRow';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport MuiTable from '@material-ui/core/Table';\nimport i18next from 'i18next';\n\nimport columnType from 'types/columnType';\nimport rowType from 'types/rowType';\n\nimport SearchInput from 'components/common/SearchInput';\nimport TablePagination from 'components/common/Table/TablePagination';\nimport EmptyRow from 'components/common/Table/EmptyRow';\nimport InternalTableBody from 'components/common/Table/InternalTableBody';\nimport InternalTableHead from 'components/common/Table/InternalTableHead';\nimport InternalTablePaginationActions from 'components/common/Table/InternalTablePaginationActions';\nimport TaskListSkeleton from 'components/TaskList/TaskListSkeleton';\n\nexport const labelDisplayedRows = ({ from, to, count }) =>\n  i18next\n    .t('table.showing')\n    .replace('$1', from)\n    .replace('$2', to)\n    .replace('$3', count);\n\nexport const swapOrder = order => (order === 'asc' ? 'desc' : 'asc');\n\nconst styles = {\n  toolbar: {\n    justifyContent: 'space-between',\n    padding: '16px 16px 8px 16px',\n    minHeight: 'unset',\n  },\n  noSubtitleToolbar: {\n    padding: '8px 16px',\n  },\n  title: {\n    textAlign: 'left',\n  },\n  hideShadows: {\n    boxShadow: 'none',\n  },\n  tableWrapper: {\n    overflow: 'auto',\n    position: 'relative',\n  },\n};\n\nclass Table extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      page: 0,\n      rowsPerPage: props.rowsPerPageOptions[0],\n      sortedColumn: props.initialSortedColumn,\n      sortFunction:\n        props.initialSortedColumn &&\n        props.columns.find(column => {\n          return column.accessor === props.initialSortedColumn;\n        }).sortFunction,\n      sortOrder: props.initialSortOrder,\n      filter: '',\n    };\n  }\n\n  createSortHandler = property => () => {\n    const { columns, lazyLoadingProps } = this.props;\n\n    if (lazyLoadingProps && lazyLoadingProps.onChange) {\n      const { sortOrder, sortedColumn, rowsPerPage, filter } = this.state;\n      const newSortOder = sortedColumn === property ? swapOrder(sortOrder) : 'asc';\n      lazyLoadingProps.onChange(0, rowsPerPage, property, newSortOder, filter, () =>\n        this.setState({\n          page: 0,\n          sortedColumn: property,\n          sortOrder: newSortOder,\n        })\n      );\n    } else {\n      const { sortFunction } = columns.find(column => {\n        return column.accessor === property;\n      });\n\n      this.setState(({ sortOrder, sortedColumn }) => ({\n        page: 0,\n        sortedColumn: property,\n        sortFunction,\n        sortOrder: sortedColumn === property ? swapOrder(sortOrder) : 'asc',\n      }));\n    }\n  };\n\n  handleChangeRowsPerPage = event => {\n    const { lazyLoadingProps } = this.props;\n    const { sortedColumn, sortOrder, filter } = this.state;\n    const rowsPerPage = event.target.value;\n\n    if (lazyLoadingProps && lazyLoadingProps.onChange) {\n      lazyLoadingProps.onChange(0, rowsPerPage, sortedColumn, sortOrder, filter, () =>\n        this.setState({ page: 0, rowsPerPage })\n      );\n    } else {\n      this.setState({ page: 0, rowsPerPage });\n    }\n  };\n\n  handleChangePage = page => {\n    const { lazyLoadingProps } = this.props;\n    const { rowsPerPage, sortedColumn, sortOrder, filter } = this.state;\n\n    this.setState({ page });\n    if (lazyLoadingProps && lazyLoadingProps.onChange) {\n      lazyLoadingProps.onChange(page, rowsPerPage, sortedColumn, sortOrder, filter);\n    }\n  };\n\n  handleChangeFilter = event => {\n    const { lazyLoadingProps } = this.props;\n    const { rowsPerPage, sortedColumn, sortOrder } = this.state;\n    const filter = event.target.value;\n\n    this.setState({ filter });\n    if (lazyLoadingProps && lazyLoadingProps.onChange) {\n      lazyLoadingProps.onChange(\n        0,\n        rowsPerPage,\n        sortedColumn,\n        sortOrder,\n        filter,\n        () => this.setState({ page: 0, filter }),\n        true\n      );\n    }\n  };\n\n  render() {\n    const {\n      columns,\n      rows = [],\n      rowsPerPageOptions,\n      title,\n      subtitle,\n      hidePagination,\n      classes,\n      lazyLoadingProps,\n      loading,\n    } = this.props;\n    const { rowsPerPage, page, sortedColumn, sortOrder, sortFunction, filter } = this.state;\n\n    const isLazy = lazyLoadingProps !== undefined;\n    const hasHeader = title || subtitle;\n\n    let displayRows = rows;\n    let rowsSize = rows.length;\n\n    if (!isLazy) {\n      // filter rows\n      if (filter) {\n        displayRows = [];\n        rows.forEach(row => {\n          const keys = Object.keys(row);\n          for (let i = 0; i < keys.length; i += 1) {\n            if (\n              row[keys[i]] &&\n              row[keys[i]]\n                .toString()\n                .toUpperCase()\n                .includes(filter.toUpperCase())\n            ) {\n              displayRows.push(row);\n              break;\n            }\n          }\n        });\n        rowsSize = displayRows.length;\n      }\n\n      // Sort the rows\n      displayRows = sortFunction\n        ? displayRows.sort(sortFunction(sortedColumn, sortOrder))\n        : displayRows;\n\n      // Slice out the rows for the current page\n      const firstRow = page * rowsPerPage;\n      const lastRow = firstRow + rowsPerPage;\n      displayRows = hidePagination ? displayRows : displayRows.slice(firstRow, lastRow);\n    }\n\n    return loading ? (\n      <TaskListSkeleton rows={rowsPerPage} />\n    ) : (\n      <>\n        {hasHeader && (\n          <Toolbar className={classNames(classes.toolbar, !subtitle && classes.noSubtitleToolbar)}>\n            <div className={classes.title}>\n              <Typography variant=\"h5\">{title}</Typography>\n              <Typography variant=\"subtitle2\">{subtitle}</Typography>\n            </div>\n            <div>\n              <SearchInput value={filter} onChange={this.handleChangeFilter} />\n            </div>\n          </Toolbar>\n        )}\n        <div className={classes.tableWrapper}>\n          <MuiTable className={classNames(!hasHeader && hidePagination && classes.hideShadows)}>\n            <InternalTableHead\n              columns={columns}\n              createSortHandler={this.createSortHandler}\n              sortedColumn={sortedColumn}\n              sortOrder={sortOrder}\n            />\n            {displayRows.length ? (\n              <InternalTableBody\n                columns={columns}\n                rows={displayRows}\n                emptyRows={rowsPerPage - displayRows.length}\n              />\n            ) : (\n              <EmptyRow colspan={columns.length} height={rowsPerPage * 55} />\n            )}\n          </MuiTable>\n        </div>\n        <MuiTable>\n          {!hidePagination && (\n            <TableFooter>\n              <TableRow>\n                <TablePagination\n                  colSpan={columns.length}\n                  count={isLazy ? lazyLoadingProps.size : rowsSize}\n                  rowsPerPage={rowsPerPage}\n                  page={isLazy ? lazyLoadingProps.currentPage : page}\n                  labelDisplayedRows={labelDisplayedRows}\n                  rowsPerPageOptions={rowsPerPageOptions}\n                  onChangePage={this.handleChangePage}\n                  onChangeRowsPerPage={this.handleChangeRowsPerPage}\n                  ActionsComponent={InternalTablePaginationActions}\n                  labelRowsPerPage={i18next.t('table.rowsPerPage')}\n                />\n              </TableRow>\n            </TableFooter>\n          )}\n        </MuiTable>\n      </>\n    );\n  }\n}\n\nTable.propTypes = {\n  classes: PropTypes.shape({\n    toolbar: PropTypes.string,\n    noSubtitleToolbar: PropTypes.string,\n    title: PropTypes.string,\n    hideShadows: PropTypes.string,\n    tableWrapper: PropTypes.string,\n  }),\n  lazyLoadingProps: PropTypes.shape({\n    currentPage: PropTypes.number,\n    onChange: PropTypes.func,\n    size: PropTypes.number,\n  }),\n  loading: PropTypes.bool,\n  columns: PropTypes.arrayOf(columnType),\n  hidePagination: PropTypes.bool,\n  /** Prop value is required for sortable tables. */\n  initialSortedColumn: PropTypes.string,\n  initialSortOrder: PropTypes.string,\n  rows: PropTypes.arrayOf(rowType),\n  rowsPerPageOptions: PropTypes.arrayOf(PropTypes.number),\n  title: PropTypes.string,\n  subtitle: PropTypes.string,\n};\n\nTable.defaultProps = {\n  classes: {},\n  loading: false,\n  lazyLoadingProps: undefined,\n  rowsPerPageOptions: [5, 10, 15],\n  title: '',\n  subtitle: '',\n  hidePagination: false,\n  initialSortedColumn: '',\n  initialSortOrder: 'asc',\n  rows: [],\n  columns: [],\n};\n\nexport default withStyles(styles)(Table);\n","import { createMuiTheme } from '@material-ui/core/styles';\n\nexport default createMuiTheme({\n  overrides: {\n    MuiTableCell: {\n      head: {\n        borderBottom: 'solid 3px #eee',\n      },\n    },\n  },\n});\n","import { ThemeProvider } from '@material-ui/styles';\nimport React from 'react';\nimport i18next from 'i18next';\nimport PropTypes from 'prop-types';\nimport Paper from '@material-ui/core/Paper';\nimport withStyles from '@material-ui/styles/withStyles';\n\nimport { WIDGET_CODES, SERVICE } from 'api/constants';\nimport configApi from 'api/config';\nimport taskListApi from 'api/taskList';\nimport utils from 'utils';\n\nimport { normalizeColumns, normalizeRows } from 'components/TaskList/normalizeData';\nimport ErrorNotification from 'components/common/ErrorNotification';\nimport ErrorComponent from 'components/common/ErrorComponent';\nimport Table from 'components/common/Table/Table';\nimport theme from 'theme';\n\nconst styles = {\n  paper: {\n    minHeight: 459,\n    position: 'relative',\n  },\n};\n\nclass TaskList extends React.Component {\n  state = {\n    loading: true,\n    columns: [],\n    rows: [],\n    size: 0,\n    currentPage: 0,\n    connection: {},\n    error: null,\n    errorAlert: null,\n  };\n\n  timer = { ref: null };\n\n  componentDidMount = async () => {\n    const { lazyLoading, 'service-url': url } = this.props;\n    const { currentPage } = this.state;\n\n    SERVICE.URL = url;\n\n    try {\n      // TODO: needs refactor\n      // config will be fetched from app-builder\n      const config = await configApi.get(WIDGET_CODES.taskList);\n\n      const taskList = lazyLoading\n        ? await taskListApi.get(config.connection, currentPage, 10)\n        : await taskListApi.get(config.connection);\n\n      this.setState({\n        loading: false,\n        columns: normalizeColumns(config.columns, taskList.payload[0]),\n        rows: normalizeRows(taskList.payload),\n        size: taskList.metadata.size,\n        connection: config.connection,\n      });\n    } catch (error) {\n      this.handleError(error.message);\n    }\n  };\n\n  componentDidUpdate = prevProps => {\n    const { lazyLoading } = this.props;\n    if (prevProps.lazyLoading !== lazyLoading) {\n      this.updateRows(lazyLoading ? 0 : undefined);\n    }\n  };\n\n  updateRows = async (\n    page,\n    rowsPerPage = 10,\n    sortedColumn,\n    sortedOrder,\n    filter,\n    callback = () => {},\n    withDelay\n  ) => {\n    const { connection } = this.state;\n\n    if (withDelay) {\n      clearTimeout(this.timer.ref);\n      await utils.timeout(800, this.timer);\n    }\n\n    this.setState({ loading: true });\n    try {\n      const res = await taskListApi.get(\n        connection,\n        page,\n        rowsPerPage,\n        sortedColumn,\n        sortedOrder,\n        filter\n      );\n\n      this.setState({\n        rows: normalizeRows(res.payload),\n        size: res.metadata.size,\n        currentPage: page || 0,\n        loading: false,\n      });\n      callback();\n    } catch (error) {\n      this.handleError(error);\n      this.setState({ loading: false });\n    }\n  };\n\n  closeNotification = () => {\n    this.setState({ errorAlert: null });\n  };\n\n  handleError(err) {\n    const { onError } = this.props;\n    onError(err);\n    this.setState({\n      error: true,\n      errorAlert: err,\n    });\n  }\n\n  render() {\n    const { loading, columns, rows, currentPage, size, error, errorAlert } = this.state;\n    const { classes, lazyLoading } = this.props;\n\n    let lazyLoadingProps;\n    if (lazyLoading) {\n      lazyLoadingProps = {\n        currentPage,\n        onChange: this.updateRows,\n        size,\n      };\n    }\n\n    return (\n      <ThemeProvider theme={theme}>\n        <Paper className={classes.paper}>\n          {error ? (\n            <ErrorComponent message={i18next.t('messages.errors.dataLoading')} />\n          ) : (\n            <Table\n              loading={loading}\n              title={i18next.t('table.title')}\n              subtitle={i18next.t('table.subtitle')}\n              columns={columns}\n              rows={rows}\n              rowsPerPageOptions={[10, 25, 50, 100]}\n              lazyLoadingProps={lazyLoadingProps}\n            />\n          )}\n        </Paper>\n        <ErrorNotification message={errorAlert} onClose={this.closeNotification} />\n      </ThemeProvider>\n    );\n  }\n}\n\nTaskList.propTypes = {\n  classes: PropTypes.shape({\n    paper: PropTypes.string,\n  }),\n  lazyLoading: PropTypes.bool,\n  onError: PropTypes.func,\n  'service-url': PropTypes.string,\n};\n\nTaskList.defaultProps = {\n  classes: {},\n  lazyLoading: false,\n  onError: () => {},\n  'service-url': '/pda',\n};\n\nexport default withStyles(styles)(TaskList);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Typography,\n  Paper,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  FormGroup,\n  Checkbox,\n  FormControlLabel,\n} from '@material-ui/core';\nimport { withStyles } from '@material-ui/styles';\nimport { Widgets as WidgetsIcon } from '@material-ui/icons';\n\nconst styles = {\n  paper: {\n    padding: 20,\n  },\n  title: {\n    display: 'flex',\n    alignItems: 'center',\n    paddingBottom: 15,\n  },\n  subtitle: {\n    padding: '20px 0 20px 0',\n  },\n  formControl: {\n    minWidth: 200,\n  },\n};\n\nclass TaskListConfig extends React.Component {\n  state = {\n    knowledgeSource: '',\n    process: '',\n  };\n\n  componentDidMount = () => {};\n\n  onChange = key => event => {\n    this.setState({ [key]: event.target.value });\n  };\n\n  render() {\n    const { classes } = this.props;\n    const { knowledgeSource, process } = this.state;\n\n    return (\n      <>\n        <Typography variant=\"h5\" className={classes.title}>\n          <WidgetsIcon /> Task List Configuration\n        </Typography>\n        <Paper className={classes.paper}>\n          <Typography>Data Source</Typography>\n          <FormGroup>\n            <FormControl className={classes.formControl} fullWidth>\n              <InputLabel htmlFor=\"knowledge-source\">Knowledge Source</InputLabel>\n              <Select\n                value={knowledgeSource}\n                inputProps={{ id: 'knowledge-source' }}\n                onChange={this.onChange('knowledgeSource')}\n              >\n                <MenuItem value=\"remote\">Remote</MenuItem>\n                <MenuItem value=\"test1\">Test 1</MenuItem>\n                <MenuItem value=\"test2\">Test 2</MenuItem>\n              </Select>\n            </FormControl>\n            <FormControl className={classes.formControl} fullWidth>\n              <InputLabel htmlFor=\"process\">Process</InputLabel>\n              <Select\n                value={process}\n                inputProps={{ id: 'process' }}\n                onChange={this.onChange('process')}\n              >\n                <MenuItem value=\"remote\">Remote</MenuItem>\n                <MenuItem value=\"test1\">Test 1</MenuItem>\n                <MenuItem value=\"test2\">Test 2</MenuItem>\n              </Select>\n            </FormControl>\n          </FormGroup>\n\n          <Typography className={classes.subtitle}>Options</Typography>\n          <FormGroup>\n            <FormControlLabel\n              control={<Checkbox value=\"checkedC\" />}\n              label=\"Open new page on table row click\"\n            />\n            <FormControlLabel control={<Checkbox value=\"checkedC\" />} label=\"Show Claim Button\" />\n            <FormControlLabel\n              control={<Checkbox value=\"checkedC\" />}\n              label=\"Show Complete Button\"\n            />\n          </FormGroup>\n\n          <Typography className={classes.subtitle}>Bpm Groups</Typography>\n          <FormGroup>\n            <FormControlLabel control={<Checkbox value=\"checkedC\" />} label=\"Admin\" />\n            <FormControlLabel control={<Checkbox value=\"checkedC\" />} label=\"Manager\" />\n            <FormControlLabel control={<Checkbox value=\"checkedC\" />} label=\"Appraiser\" />\n            <FormControlLabel control={<Checkbox value=\"checkedC\" />} label=\"Broker\" />\n          </FormGroup>\n\n          <Typography className={classes.subtitle}>\n            Override fields found for PAM process\n          </Typography>\n        </Paper>\n      </>\n    );\n  }\n}\n\nTaskListConfig.propTypes = {\n  classes: PropTypes.shape({\n    paper: PropTypes.string,\n    formControl: PropTypes.string,\n    title: PropTypes.string,\n    subtitle: PropTypes.string,\n  }),\n};\n\nTaskListConfig.defaultProps = {\n  classes: {},\n};\n\nexport default withStyles(styles)(TaskListConfig);\n","import React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport {\n  AppBar,\n  Checkbox,\n  Container,\n  FormControlLabel,\n  Toolbar,\n  Typography,\n  IconButton,\n} from '@material-ui/core';\nimport { Menu as MenuIcon } from '@material-ui/icons';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport 'components/App/App.css';\nimport Menu from 'components/App/Menu';\n\n// widgets\nimport Home from 'components/App/Home';\nimport TaskListContainer from 'components/TaskList/TaskListContainer';\nimport TaskListConfig from 'components/TaskList/TaskListConfig';\n\nconst useStyles = makeStyles(theme => ({\n  appBar: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nfunction App() {\n  const [open, setOpen] = React.useState(false);\n  const [lazyLoading, setLazyLoading] = React.useState(false);\n  const classes = useStyles();\n\n  return (\n    <div className=\"App\">\n      <Router>\n        <AppBar position=\"static\" className={classes.appBar}>\n          <Toolbar>\n            <IconButton\n              edge=\"start\"\n              color=\"inherit\"\n              aria-label=\"menu\"\n              onClick={() => setOpen(true)}\n              className={classes.menuButton}\n            >\n              <MenuIcon />\n            </IconButton>\n            <Typography variant=\"h6\" className={classes.title}>\n              Entando - PAM Plugin\n            </Typography>\n            <FormControlLabel\n              control={\n                <Checkbox checked={lazyLoading} onChange={() => setLazyLoading(!lazyLoading)} />\n              }\n              label=\"Lazy Loading\"\n              labelPlacement=\"start\"\n            />\n          </Toolbar>\n        </AppBar>\n\n        <Menu open={open} setOpen={setOpen} />\n\n        <Container className=\"app-container\">\n          <Route path=\"/\" exact component={Home} />\n          <Route path=\"/TaskList/\" render={() => <TaskListContainer lazyLoading={lazyLoading} />} />\n          <Route path=\"/TaskListConfig\" component={TaskListConfig} />\n        </Container>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import en from 'i18n/locales/en.json';\nimport it from 'i18n/locales/it.json';\n\nexport default {\n  en,\n  it,\n};\n","export default {\n  interpolation: { escapeValue: false },\n  ns: ['translation'],\n};\n","import i18next from 'i18next';\nimport { initReactI18next } from 'react-i18next';\nimport locales from 'i18n/locales';\nimport i18nextOptions from 'i18n/i18nextOptions';\n\ni18next.use(initReactI18next).init(i18nextOptions);\n\nObject.keys(locales).forEach(locale => {\n  i18next.addResourceBundle(locale, i18nextOptions.ns[0], locales[locale]);\n});\n","import i18next from 'i18next';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport TaskList from 'components/TaskList/TaskListContainer';\n\nclass TaskListElement extends HTMLElement {\n  connectedCallback() {\n    const mountPoint = document.createElement('div');\n    this.appendChild(mountPoint);\n\n    const locale = this.getAttribute('locale') || 'en';\n    i18next.changeLanguage(locale);\n\n    const customEventPrefix = 'task.list.';\n\n    const onError = error => {\n      const customEvent = new CustomEvent(`${customEventPrefix}error`, {\n        detail: {\n          error,\n        },\n      });\n      this.dispatchEvent(customEvent);\n    };\n\n    const reactRoot = React.createElement(TaskList, { onError }, null);\n    ReactDOM.render(reactRoot, mountPoint);\n  }\n}\n\ncustomElements.define('task-list', TaskListElement);\n"],"sourceRoot":""}